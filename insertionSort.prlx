class sort :__edit__ {
	$math:eq $sort:__key__ "do";
	if $math:result {
		$utils:type $sort:do;
		$math:ne $utils:result "table";
		if $math:result {
			$table:create;
			$table:push $table:result $sort:do;
			$sort:do $table:result;
		}
		$utils:length $sort:do;
		$math:len $utils:result;
		$math:sub $math:len 1;
		$math:ran $math:result;
		$math:idx 1;
		loop $math:ran {
			$table:get $sort:do $math:idx;
			$math:currentVal $table:result;
			$math:pos $math:idx;
			$math:gt $math:pos 0;
			$math:con $math:result;
			$math:sub $math:pos 1;
			$math:pos $math:result;
			$table:get $sort:do $math:pos;
			$math:add $math:pos 1;
			$math:pos $math:result;
			$math:gt $table:result $math:currentVal;
			$math:eq $math:result 1;
			if $math:result {
				$math:eq $math:con 1;
				if $math:result {
					loop -1 {
						$math:sub $math:pos 1;
						$math:pos $math:result;
						$table:get $sort:do $math:pos;
						$math:add $math:pos 1;
						$math:pos $math:result;
						$table:set $sort:do $math:pos $table:result;
						$math:sub $math:pos 1;
						$math:pos $math:result;
						$math:gt $math:pos 0;
						$math:con $math:result;
						$math:sub $math:pos 1;
						$math:pos $math:result;
						$table:get $sort:do $math:pos;
						$math:add $math:pos 1;
						$math:pos $math:result;
						$math:gt $table:result $math:currentVal;
						$math:ne $math:result 1;
						if $math:result {
							break;
						}
						$math:ne $math:con 1;
						if $math:result {
							break;
						}
					}
				}
			}
			$table:set $sort:do $math:pos $math:currentVal;
			$math:add $math:idx 1;
			$math:idx $math:result;
		}
	}
}

sort $sort;
$table:create;
$table:push $table:result 4 :push $table:result 1 :push $table:result 5 :push $table:result 3 :push $table:result 2;
$sort:do $table:result;
$table:foreach $sort:do {
	$io:write $table:value :write ' ';
};
$io:write '\n';