class str {
	require "classes/str.class";

	# Constants
	$whitespace " \t\n\r\x0b\f";
	$ascii_lowercase "abcdefghijklmnopqrstuvwxyz";
	$ascii_uppercase "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	$ascii_letters [$combine : $ascii_lowercase $ascii_uppercase];
	$digits "0123456789";
	$hexdigits "0123456789abcdefABCDEF";
	$octdigits "01234567";
	$punctuation "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~";
	$printable [$combine : [$combine : $digits $ascii_letters] [$combine : $punctuation $whitespace]];
	
	# Functions
	"Converts the characters in a string to uppercase"
	$upper $upper;
	
	"Converts the characters in a string to lowercase"
	$lower $lower;
	
	"Replaces occurrences of a specified substring with
	another substring in a string"
	$replace $replace;
	
	"Finds the index of the first occurrence of a substring
	in a string"
	$find $find;
	
	"Reverses the characters in a string"
	$reverse $reverse;
	
	"Converts an ASCII value to its corresponding character"
	$chr $_char;
	$_char none;
	
	"Converts a character to its ASCII value"
	$byte $_byte;
	$_byte none;
	
	"Repeats a string a specified number of times"
	$rep $rep;
	
	"Concatenates two strings"
	$combine $combine;
	
	"Returns the character at a specified index in a string
	as a string"
	$index $index;
	
	"Extracts a substring from a string based on specified
	start and end indices"
	$sub $sub;
	
	"Splits a string into an array of substrings based on
	a specified delimiter"
	$split $split;
	
	"Counts the number of occurrences of a substring in
	a string"
	$count $count;
}